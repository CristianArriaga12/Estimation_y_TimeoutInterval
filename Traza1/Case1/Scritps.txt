Para la estimación del RTT se tomará el archivo hop02.txt con el lenguaje awk para realizar los calculos y guardarlos en un archivo llamado EstimatedRTT

α1 = 1/8 ~ 0.125
β1 = 1/4 ~ 0.25

    awk ' {alpha=0.125} {if(NR!=1){ EstimatedRTT=((1-0.125)*EstimatedRTT)+(0.125*$1) } else{ EstimatedRTT=$1 }} {$2=EstimatedRTT} {SampleRTT = $1+"  \t  "} {print SampleRTT,$2}' hop02.txt > Estimated_1.txt 


Posteriormente realizamos el calculo de la desviación, utilizando el archivo Estimated_1.txt y la guardamos en un nuevo archivo llamado DevRTT_1.txt

    awk '{beta=0.25}{if(NR!=1){DevRTT=((1-beta)*DevRTT)+(beta*sqrt(($1-$2)*($1-$2)))}else{DevRTT=($1/2)}}{$3=DevRTT}{SampleRTT = $1+"  \t  "}{EstimatedRTT = $2+"  \t  "}{print SampleRTT,EstimatedRTT,$3}'  Estimated_1.txt > DevRTT_1.txt 

Por último se calcula 

    awk '{TimeOutInterval=$2+(4*$3)} {$4=TimeOutInterval}{print}' DevRTT_1.txt > TimeOutInterval_1.txt

Para poder 


    awk '{if(NR>=100 && NR <= 130){ print }}'  TimeOutInterval_1.txt > TimeOutInterval_1_1.txt 

Posteriormente vamos a elegir diferentes valores de alfa y beta esto con el fin de encontrar los mejores valores para poder tener una mejor estimación y elegir que parametros son optimos

Caso 2:
(α1> α,β1> β)
α1 = 1/7 ~ 0.142
β1 = 1/3 ~ 0.33

    awk ' {alpha=0.142} {if(NR!=1){ EstimatedRTT=((1-alpha)*EstimatedRTT)+(alpha*$1) } else{ EstimatedRTT=$1 }} {$2=EstimatedRTT} {SampleRTT = $1+"  \t  "} {print SampleRTT,$2}' hop02.txt > Estimated_1_2.txt 

    awk '{beta=0.33}{if(NR!=1){DevRTT=((1-beta)*DevRTT)+(beta*sqrt(($1-$2)*($1-$2)))}else{DevRTT=($1/2)}}{$3=DevRTT}{SampleRTT = $1+"  \t  "}{EstimatedRTT = $2+"  \t  "}{print SampleRTT,EstimatedRTT,$3}'  Estimated_1_2.txt > DevRTT_1_2.txt

    awk '{TimeOutInterval=$2+(4*$3)} {$4=TimeOutInterval}{print}' DevRTT_1_2.txt > TimeOutInterval_1_2.txt


    awk '{if(NR>=100 && NR <= 130){ print }}'  TimeOutInterval_1_2.txt > TimeOutInterval_1_2_1.txt 

Caso 3: 
(α2< α,β2< β)
α1 = 1/9 ~ 0.111
β1 = 1/6 ~ 0.166
 
    awk ' {alpha=0.111} {if(NR!=1){ EstimatedRTT=((1-alpha)*EstimatedRTT)+(alpha*$1) } else{ EstimatedRTT=$1 }} {$2=EstimatedRTT} {SampleRTT = $1+"  \t  "} {print SampleRTT,$2}' hop02.txt > Estimated_1_3.txt 

    awk '{beta=0.166}{if(NR!=1){DevRTT=((1-beta)*DevRTT)+(beta*sqrt(($1-$2)*($1-$2)))}else{DevRTT=($1/2)}}{$3=DevRTT}{SampleRTT = $1+"  \t  "}{EstimatedRTT = $2+"  \t  "}{print SampleRTT,EstimatedRTT,$3}'  Estimated_1_3.txt > DevRTT_1_3.txt

    awk '{TimeOutInterval=$2+(4*$3)} {$4=TimeOutInterval}{print}' DevRTT_1_3.txt > TimeOutInterval_1_3.txt


    awk '{if(NR>=100 && NR <= 130){ print }}'  TimeOutInterval_1_3.txt > TimeOutInterval_1_3_1.txt

Finalmente graficamos el archivo TimeOutInterval_1_1.txt, TimeOutInterval_1_2_1.txt & TimeOutInterval_1_3_1.txt
con los siguientes scripts

Case 1:
    load TimeOutInterval_1_1.txt 
    hold on
    SampleRTT = plot(TimeOutInterval_1_1(:,1),'-s r','LineWidth',1)

    EstimatedRTT = plot(TimeOutInterval_1_1(:,2),'-s b','LineWidth',1)

    TimeoutInterval = plot (TimeOutInterval_1_1(:,4),'-s g', 'LineWidth',1)

    legend('SampleRTT','EstimatedRTT','TimeOutInterval')
    grid on
    hold off
    xlabel("Tiempo[s]")
    ylabel("Round Trip-Time [ms]")
    print -dpng "Case1.png"
       
Case 2: 
    load TimeOutInterval_1_2_1.txt 
    hold on
    SampleRTT = plot(TimeOutInterval_1_2_1(:,1),'-s r','LineWidth',1)

    EstimatedRTT = plot(TimeOutInterval_1_2_1(:,2),'-s b','LineWidth',1)

    TimeoutInterval = plot (TimeOutInterval_1_2_1(:,4),'-s g', 'LineWidth',1)

    legend('SampleRTT','EstimatedRTT','TimeOutInterval')
    grid on
    hold off
    xlabel("Tiempo[s]")
    ylabel("Round Trip-Time [ms]")
    print -dpng "Case2.png"

Case 3: 
    load TimeOutInterval_1_3_1.txt 
    hold on
    SampleRTT = plot(TimeOutInterval_1_3_1(:,1),'-s r','LineWidth',1)

    EstimatedRTT = plot(TimeOutInterval_1_3_1(:,2),'-s b','LineWidth',1)

    TimeoutInterval = plot (TimeOutInterval_1_3_1(:,4),'-s g', 'LineWidth',1)

    legend('SampleRTT','EstimatedRTT','TimeOutInterval')
    grid on
    hold off
    xlabel("Tiempo[s]")
    ylabel("Round Trip-Time [ms]")
    print -dpng "Case3.png"
